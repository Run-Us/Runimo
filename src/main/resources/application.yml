server:
  port: 8080
  tomcat:
    threads:
      max: 200
    accept-count: 100
    max-connections: 8912
    max-keep-alive-requests: 200
runimo:
  security:
    secret-key: ${AES_KEY}
    iv: ${AES_IV}
  server:
    ui:
      path: ${SWAGGER_UI_SERVER:http://localhost:8080}

spring:
  servlet:
    multipart:
      enabled: true
      max-request-size: 15MB
      max-file-size: 10MB

  config:
    import:
      - optional:file:${ENV_PATH:.}/.env.${SPRING_PROFILES_ACTIVE:dev}[.properties]
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  datasource:
    driver-class-name: ${DB_DRIVER_CLASS_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:none}
    properties:
      hibernate:
        dialect: ${JPA_DIALECT}
    open-in-view: false
  jackson:
    property-naming-strategy: SNAKE_CASE
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-name: kakao
            redirectUri: ${KAKAO_REDIRECT_URI}
            authorization-grant-type: authorization_code
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v1/oidc/userinfo
cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_REGION}
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}
apple:
  client-id: ${APPLE_CLIENT_ID}
  client-secret: ${APPLE_PRIVATE_KEY}
  redirect-uri: ${APPLE_REDIRECT_URI}
  team-id: ${APPLE_TEAM_ID}
  key-id: ${APPLE_KEY_ID}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:3600000}
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION:86400000}
  temp:
    expiration: ${JWT_REGISTER_EXPIRATION}

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: debug
decorator:
  datasource:
    p6spy:
      enable-logging: true

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    show-sql: true

jwt:
  expiration: ${JWT_EXPIRATION:180000}
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION:86400000}

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:${DB_TYPE}://${DB_HOST}:${DB_PORT}/${DB_NAME}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  sql:
    init:
      mode: never

jwt:
  expiration: ${JWT_EXPIRATION:6000000}
  refresh:
    expiration: ${JWT_REFRESH_EXPIRATION:604800000}

---
spring:
  config:
    activate:
      on-profile: test
  sql:
    init:
      mode: always